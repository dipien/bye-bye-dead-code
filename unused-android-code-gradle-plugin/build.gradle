ext.PROJECT_NAME = "Unused Android Code Gradle Plugin"
description = "Template Plugin Description"
ext.ARTIFACT_ID = "unused-android-code-gradle-plugin"
ext.GRADLE_PLUGIN_ID = "com.dipien.unused-android-code"
ext.GRADLE_PLUGIN_IMPLEMENTATION_CLASS = "com.jdroid.gradle.unusedandroidcode.UnusedAndroidCodePlugin"
ext.GRADLE_PLUGIN_PORTAL_TAGS = ["gradle", "plugin", "android"]

apply plugin: "com.jdroidtools.gradle.plugin"

buildscript {
	dependencies {
		classpath(BuildLibs.JDROID_GRADLE_PROJECT_PLUGIN)
	}
}

dependencies {
	compile(Libs.JDROID_JAVA_CORE)
	implementation localGroovy()
	implementation 'org.jdom:jdom2:2.0.6'
	testCompile(Libs.JUNIT)
	testCompile(Libs.TRUTH)
}



// Remove this when groovy code is converted to Kotlin
apply plugin: 'groovy'
tasks.named('compileGroovy') {
	// Groovy only needs the declared dependencies
	// and not the output of compileJava
	classpath = sourceSets.main.compileClasspath
}
tasks.named('compileKotlin') {
	// Kotlin also depends on the result of Groovy compilation
	// which automatically makes it depend of compileGroovy
	classpath += files(sourceSets.main.groovy.classesDirectory)
}
////////////////////////////////////////////////////////
